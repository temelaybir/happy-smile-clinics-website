generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  email     String        @unique
  password  String
  name      String
  role      String        @default("admin")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  logs      ActivityLog[]
}

model HeroVideo {
  id          String   @id @default(cuid())
  url         String
  title       String
  description String?
  active      Boolean  @default(false)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model HeroBackground {
  id            String   @id @default(cuid())
  imageUrl      String
  title         String?
  order         Int      @default(0)
  isActive      Boolean  @default(true)
  animationType String?  @default("slide")
  transparency  Float    @default(0.3)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Review {
  id        String   @id @default(cuid())
  name      String
  country   String
  rating    Int
  text      String
  image     String?
  verified  Boolean  @default(true)
  featured  Boolean  @default(false)
  googleId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InstagramVideo {
  id        String   @id @default(cuid())
  title     String
  videoUrl  String
  thumbnail String
  category  String
  treatment String
  duration  String
  likes     Int      @default(0)
  comments  Int      @default(0)
  featured  Boolean  @default(false)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PatientResult {
  id          String   @id @default(cuid())
  name        String
  age         Int
  location    String
  treatment   String
  duration    String
  teethCount  String
  beforeImage String
  afterImage  String
  testimonial String
  rating      Int
  featured    Boolean  @default(false)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ClinicInfo {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  type      String
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamMember {
  id        String   @id @default(cuid())
  name      String
  title     String
  specialty String?
  bio       String
  image     String
  order     Int      @default(0)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String
  content     String
  image       String
  icon        String?
  price       String?
  duration    String?
  featured    Boolean  @default(false)
  order       Int      @default(0)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  excerpt   String
  content   String
  image     String
  author    String
  category  String
  tags      String
  published Boolean  @default(false)
  featured  Boolean  @default(false)
  views     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Media {
  id        String   @id @default(cuid())
  filename  String
  url       String
  type      String
  size      Int
  width     Int?
  height    Int?
  alt       String?
  caption   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SEOSettings {
  id          String   @id @default(cuid())
  page        String   @unique
  title       String
  description String
  keywords    String?
  ogImage     String?
  schema      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ActivityLog {
  id         String   @id @default(cuid())
  userId     String
  action     String
  resource   String
  resourceId String?
  details    String?
  ipAddress  String?
  userAgent  String?
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  country   String
  message   String
  status    String   @default("new")
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id          String        @id @default(cuid())
  slug        String        @unique
  title       String
  description String?
  isPublished Boolean       @default(true)
  seoTitle    String?
  seoDesc     String?
  seoKeywords String?
  updatedBy   String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  sections    PageSection[]
}

model PageSection {
  id        String   @id @default(cuid())
  pageId    String
  type      String
  title     String?
  content   String
  image     String?
  metadata  String?
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
}
